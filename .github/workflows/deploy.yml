name: Deploy Keycloak VM and containers on Azure

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TF_VAR_ssh_public_key_path: "~/.ssh/id_rsa.pub"

    steps:
      # Checkout your repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Azure CLI
      - name: Azure CLI login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Install Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      # Terraform init, validate, apply
      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Apply
        run: terraform apply -auto-approve

      # Get public IP from Terraform output
      - name: Get public IP output
        id: tf-output
        run: |
          echo "PUBLIC_IP=$(terraform output -raw public_ip)" >> $GITHUB_ENV

      # Install Ansible
      - name: Install Ansible
        run: |
          python -m pip install --user pipx
          ~/.local/bin/pipx install ansible

      # Set up SSH private key for Ansible
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # Create Ansible inventory file dynamically
      - name: Create Ansible inventory file
        run: |
          echo "$PUBLIC_IP ansible_user=azureuser ansible_host=$PUBLIC_IP ansible_ssh_private_key_file=~/.ssh/id_rsa" > .ansible_inventory

      # Run Ansible playbook using dawidd6 GitHub Action
      - name: Run Ansible Playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ansible/playbook.yml
          inventory: .ansible_inventory

      # Terraform Destroy (optional clean-up job)
      - name: Terraform Destroy
        if: always()
        run: terraform destroy -auto-approve
