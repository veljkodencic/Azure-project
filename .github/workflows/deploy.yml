name: Deploy Keycloak VM and containers on Azure

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Azure CLI login (using service principal credentials stored in GitHub secrets)
      - name: Azure CLI login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Set up Terraform (install Terraform)
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6  # Adjust this version as needed

      # Step 4: Terraform Init
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      # Step 5: Terraform Validate
      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

      # Step 6: Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # Step 7: Get public IP output from Terraform
      - name: Get public IP
        run: |
          echo "PUBLIC_IP=$(terraform output -raw public_ip)" >> $GITHUB_ENV

      # Step 8: Install Ansible
      - name: Install Ansible
        run: |
          python -m pip install --user pipx
          ~/.local/bin/pipx install ansible

      # Step 9: Set up SSH key for connecting to the VM
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # Step 10: Test SSH connection
      - name: Test SSH
        run: |
          echo "Public IP: $PUBLIC_IP"
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa azureuser@$PUBLIC_IP "echo 'SSH OK'"

      # Step 11: Create Ansible inventory dynamically
      - name: Create Ansible inventory
        run: |
          echo "$PUBLIC_IP ansible_user=azureuser ansible_ssh_private_key_file=~/.ssh/id_rsa" > hosts

      # Step 12: Run Ansible Playbook
      - name: Run Ansible Playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ansible/playbook.yml
          inventory: hosts
